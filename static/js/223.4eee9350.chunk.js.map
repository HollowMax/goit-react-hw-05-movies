{"version":3,"file":"static/js/223.4eee9350.chunk.js","mappings":"0NAEaA,GAAYC,E,OAAAA,IAAO,MAAPA,CAAH,0C,SCCf,SAASC,EAAT,GAA6C,IAAzBC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UACpC,OACE,0BACGF,IAAO,SAACH,EAAD,CAAWM,IAAG,yCAAoCH,MAC1D,uBAAIC,KACJ,uCAAeC,OAGpB,CCNM,SAASE,IAAQ,IAAD,EACrB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YACE,WACEC,GACD,GAED,IAGF,IAAMA,EAAc,WAClBC,MAAM,sCAAD,OACmCJ,EADnC,qEAGFK,MAAK,SAAAC,GAAE,OAAIA,EAAGC,MAAP,IACPF,MAAK,SAAAC,GAAE,OAAIP,EAAQO,EAAZ,GACX,EAED,OACE,wBACGR,IAAI,OACHA,QADG,IACHA,GADG,UACHA,EAAMU,YADH,aACH,EAAYC,KAAI,SAAAH,GAAE,OAChB,SAACf,EAAD,CAAsBC,IAAKc,EAAGI,aAAcjB,KAAMa,EAAGb,KAAMC,UAAWY,EAAGZ,WAA1DY,EAAGK,GADF,MAKzB,C","sources":["pages/Cast/CastItem.styled.js","pages/Cast/CastItem.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledImg = styled('img')`\n  height: 300px;\n`;\n","import { StyledImg } from './CastItem.styled';\nimport PropTypes from 'prop-types';\n\nexport function CastItem({ img, name, character }) {\n  return (\n    <li>\n      {img && <StyledImg src={`https://image.tmdb.org/t/p/w500${img}`} />}\n      <p>{name}</p>\n      <p>Character: {character}</p>\n    </li>\n  );\n}\n\nCastItem.propTypes = {\n  img: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastItem } from './CastItem';\n\nexport function Cast() {\n  const [data, setData] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(\n    () => {\n      handleFetch();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const handleFetch = () => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=f6d5a4fa968409c62e241bddb68c1803&language=en-US`\n    )\n      .then(el => el.json())\n      .then(el => setData(el));\n  };\n\n  return (\n    <ul>\n      {data &&\n        data?.cast?.map(el => (\n          <CastItem key={el.id} img={el.profile_path} name={el.name} character={el.character} />\n        ))}\n    </ul>\n  );\n}\n"],"names":["StyledImg","styled","CastItem","img","name","character","src","Cast","useState","data","setData","movieId","useParams","useEffect","handleFetch","fetch","then","el","json","cast","map","profile_path","id"],"sourceRoot":""}